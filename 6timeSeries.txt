import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from statsmodels.tsa.arima.model import ARIMA
from sklearn.metrics import mean_squared_error
from sklearn.metrics import mean_absolute_error, mean_squared_error
df=pd.read_csv("/content/AirQualityUCI - empty.csv")
df.head()

df.isnull().sum()

df = df.dropna()
df.isnull().sum()

df.columns

df1 = df.drop(['Time','PT08.S1(CO)','C6H6(GT)','PT08.S2(NMHC)','NOx(GT)','PT08.S3(NOx)','NO2(GT)','PT08.S4(NO2)','PT08.S5(O3)','T','RH','AH'],axis = 1, inplace  = True)

df.columns

df["Date"] = df["Date"].astype("datetime64")

df['Date'] = pd.to_datetime(df['Date'], format='%d-%m-%Y')
df = df.set_index('Date')
df.index = pd.to_datetime(df.index, format='%d-%m-%Y')
monthly_data = df.resample('M').mean()

# Split data into training and testing sets
train_size = int(len(monthly_data) * 0.7)
train_data, test_data = monthly_data[:train_size], monthly_data[train_size:]

# Define ARIMA parameters
order = (1, 1, 1) # p, d, q
seasonal_order = (0, 0, 0, 0) # P, D, Q, s

model = ARIMA(train_data, order=order)
results = model.fit()

# Generate predictions on test data
predictions = results.predict(start=len(train_data), end=len(monthly_data)-1)
print(predictions)

# Visualize actual and predicted prices
plt.plot(monthly_data.index, monthly_data, label='Actual')
plt.plot(predictions.index, predictions, label='Predicted')
plt.legend()
plt.xlabel('Date')
plt.ylabel('CO mg/m^3')
plt.title('ARIMA Predictions for Carbon Monoxide particles in Air')
plt.show()

#mae
mae = mean_absolute_error(test_data, predictions)
print("Mean ABsolute Error: ",mae)
#mape
print("Mean Absolute Percentage Error: ",mae*100, end=" %")
#mse
mse = mean_squared_error(test_data, predictions)
print("Mean Squared Error: ",mse)
#rmse
rmse = np.sqrt(mean_squared_error(test_data, predictions))
print('ARIMA model RMSE: %.3f' % rmse)